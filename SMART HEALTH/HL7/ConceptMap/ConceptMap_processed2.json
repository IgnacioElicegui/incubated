{"ConceptMap": {"description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.", "properties": {"resourceType": {"description": "This is a ConceptMap resource", "const": "ConceptMap"}, "id": {"description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "meta": {"description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}, "versionId": {"description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.", "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$", "type": "string"}, "_versionId": {"description": "Extensions for versionId", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "$ref": "#/definitions/string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}}, "additionalProperties": false}, "lastUpdated": {"description": "When the resource last changed - e.g. when the version changed.", "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", "type": "string"}, "_lastUpdated": {"description": "Extensions for lastUpdated", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "$ref": "#/definitions/string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}}, "additionalProperties": false}, "source": {"description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.", "pattern": "^\\S*$", "type": "string"}, "_source": {"description": "Extensions for source", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "$ref": "#/definitions/string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}}, "additionalProperties": false}, "profile": {"description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].", "items": {"type": "string"}, "type": "array"}, "security": {"description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.", "items": {"type": "string"}, "type": "array"}, "tag": {"description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "implicitRules": {"description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.", "pattern": "^\\S*$", "type": "string"}, "_implicitRules": {"description": "Extensions for implicitRules", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "language": {"description": "The base language in which the resource is written.", "pattern": "^[^\\s]+(\\s[^\\s]+)*$", "type": "string"}, "_language": {"description": "Extensions for language", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "text": {"description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}, "status": {"description": "The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.", "enum": ["generated", "extensions", "additional", "empty"]}, "_status": {"description": "Extensions for status", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "$ref": "#/definitions/string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}}, "additionalProperties": false}, "div": {"description": "The actual narrative content, a stripped down version of XHTML."}}, "additionalProperties": false, "required": ["div"]}, "contained": {"description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.", "items": {"type": "string"}, "type": "array"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}, "url": {"description": "Source of the definition for the extension code - a logical name or a URL.", "type": "string"}, "_url": {"description": "Extensions for url", "type": "string"}, "valueBase64Binary": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$", "type": "string"}, "_valueBase64Binary": {"description": "Extensions for valueBase64Binary", "type": "string"}, "valueBoolean": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^true|false$", "type": "boolean"}, "_valueBoolean": {"description": "Extensions for valueBoolean", "type": "string"}, "valueCanonical": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^\\S*$", "type": "string"}, "_valueCanonical": {"description": "Extensions for valueCanonical", "type": "string"}, "valueCode": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^[^\\s]+(\\s[^\\s]+)*$", "type": "string"}, "_valueCode": {"description": "Extensions for valueCode", "type": "string"}, "valueDate": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", "type": "string"}, "_valueDate": {"description": "Extensions for valueDate", "type": "string"}, "valueDateTime": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", "type": "string"}, "_valueDateTime": {"description": "Extensions for valueDateTime", "type": "string"}, "valueDecimal": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", "type": "number"}, "_valueDecimal": {"description": "Extensions for valueDecimal", "type": "string"}, "valueId": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$", "type": "string"}, "_valueId": {"description": "Extensions for valueId", "type": "string"}, "valueInstant": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", "type": "string"}, "_valueInstant": {"description": "Extensions for valueInstant", "type": "string"}, "valueInteger": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^-?([0]|([1-9][0-9]*))$", "type": "number"}, "_valueInteger": {"description": "Extensions for valueInteger", "type": "string"}, "valueMarkdown": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "_valueMarkdown": {"description": "Extensions for valueMarkdown", "type": "string"}, "valueOid": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$", "type": "string"}, "_valueOid": {"description": "Extensions for valueOid", "type": "string"}, "valuePositiveInt": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^[1-9][0-9]*$", "type": "number"}, "_valuePositiveInt": {"description": "Extensions for valuePositiveInt", "type": "string"}, "valueString": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "_valueString": {"description": "Extensions for valueString", "type": "string"}, "valueTime": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", "type": "string"}, "_valueTime": {"description": "Extensions for valueTime", "type": "string"}, "valueUnsignedInt": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^[0]|([1-9][0-9]*)$", "type": "number"}, "_valueUnsignedInt": {"description": "Extensions for valueUnsignedInt", "type": "string"}, "valueUri": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^\\S*$", "type": "string"}, "_valueUri": {"description": "Extensions for valueUri", "type": "string"}, "valueUrl": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^\\S*$", "type": "string"}, "_valueUrl": {"description": "Extensions for valueUrl", "type": "string"}, "valueUuid": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", "type": "string"}, "_valueUuid": {"description": "Extensions for valueUuid", "type": "string"}, "valueAddress": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueAge": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueAnnotation": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueAttachment": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueCodeableConcept": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueCodeableReference": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueCoding": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueContactPoint": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueCount": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueDistance": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueDuration": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueHumanName": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueIdentifier": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueMoney": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valuePeriod": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueQuantity": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueRange": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueRatio": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueRatioRange": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueReference": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueSampledData": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueSignature": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueTiming": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueContactDetail": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueContributor": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueDataRequirement": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueExpression": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueParameterDefinition": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueRelatedArtifact": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueTriggerDefinition": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueUsageContext": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueDosage": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}}, "additionalProperties": false}, "type": "array"}, "modifierExtension": {"description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", "items": {"properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}, "url": {"description": "Source of the definition for the extension code - a logical name or a URL.", "type": "string"}, "_url": {"description": "Extensions for url", "type": "string"}, "valueBase64Binary": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$", "type": "string"}, "_valueBase64Binary": {"description": "Extensions for valueBase64Binary", "type": "string"}, "valueBoolean": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^true|false$", "type": "boolean"}, "_valueBoolean": {"description": "Extensions for valueBoolean", "type": "string"}, "valueCanonical": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^\\S*$", "type": "string"}, "_valueCanonical": {"description": "Extensions for valueCanonical", "type": "string"}, "valueCode": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^[^\\s]+(\\s[^\\s]+)*$", "type": "string"}, "_valueCode": {"description": "Extensions for valueCode", "type": "string"}, "valueDate": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", "type": "string"}, "_valueDate": {"description": "Extensions for valueDate", "type": "string"}, "valueDateTime": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", "type": "string"}, "_valueDateTime": {"description": "Extensions for valueDateTime", "type": "string"}, "valueDecimal": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", "type": "number"}, "_valueDecimal": {"description": "Extensions for valueDecimal", "type": "string"}, "valueId": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$", "type": "string"}, "_valueId": {"description": "Extensions for valueId", "type": "string"}, "valueInstant": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", "type": "string"}, "_valueInstant": {"description": "Extensions for valueInstant", "type": "string"}, "valueInteger": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^-?([0]|([1-9][0-9]*))$", "type": "number"}, "_valueInteger": {"description": "Extensions for valueInteger", "type": "string"}, "valueMarkdown": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "_valueMarkdown": {"description": "Extensions for valueMarkdown", "type": "string"}, "valueOid": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$", "type": "string"}, "_valueOid": {"description": "Extensions for valueOid", "type": "string"}, "valuePositiveInt": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^[1-9][0-9]*$", "type": "number"}, "_valuePositiveInt": {"description": "Extensions for valuePositiveInt", "type": "string"}, "valueString": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "_valueString": {"description": "Extensions for valueString", "type": "string"}, "valueTime": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", "type": "string"}, "_valueTime": {"description": "Extensions for valueTime", "type": "string"}, "valueUnsignedInt": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^[0]|([1-9][0-9]*)$", "type": "number"}, "_valueUnsignedInt": {"description": "Extensions for valueUnsignedInt", "type": "string"}, "valueUri": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^\\S*$", "type": "string"}, "_valueUri": {"description": "Extensions for valueUri", "type": "string"}, "valueUrl": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^\\S*$", "type": "string"}, "_valueUrl": {"description": "Extensions for valueUrl", "type": "string"}, "valueUuid": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", "type": "string"}, "_valueUuid": {"description": "Extensions for valueUuid", "type": "string"}, "valueAddress": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueAge": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueAnnotation": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueAttachment": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueCodeableConcept": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueCodeableReference": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueCoding": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueContactPoint": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueCount": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueDistance": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueDuration": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueHumanName": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueIdentifier": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueMoney": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valuePeriod": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueQuantity": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueRange": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueRatio": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueRatioRange": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueReference": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueSampledData": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueSignature": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueTiming": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueContactDetail": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueContributor": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueDataRequirement": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueExpression": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueParameterDefinition": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueRelatedArtifact": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueTriggerDefinition": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueUsageContext": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}, "valueDosage": {"description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).", "type": "string"}}, "additionalProperties": false}, "type": "array"}, "url": {"description": "An absolute URI that is used to identify this concept map when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this concept map is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the concept map is stored on different servers.", "pattern": "^\\S*$", "type": "string"}, "_url": {"description": "Extensions for url", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "identifier": {"description": "A formal identifier that is used to identify this concept map when it is represented in other formats, or referenced in a specification, model, design or an instance.", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}, "use": {"description": "The purpose of this identifier.", "enum": ["usual", "official", "temp", "secondary", "old"]}, "_use": {"description": "Extensions for use", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "$ref": "#/definitions/string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}}, "additionalProperties": false}, "type": {"description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "$ref": "#/definitions/string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}, "coding": {"description": "A reference to a code defined by a terminology system.", "items": {"$ref": "#/definitions/Coding"}, "type": "array"}, "text": {"description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.", "$ref": "#/definitions/string"}, "_text": {"description": "Extensions for text", "$ref": "#/definitions/Element"}}, "additionalProperties": false}, "system": {"description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.", "pattern": "^\\S*$", "type": "string"}, "_system": {"description": "Extensions for system", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "$ref": "#/definitions/string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}}, "additionalProperties": false}, "value": {"description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "_value": {"description": "Extensions for value", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "$ref": "#/definitions/string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}}, "additionalProperties": false}, "period": {"description": "Time period during which identifier is/was valid for use.", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "$ref": "#/definitions/string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}, "start": {"description": "The start of the period. The boundary is inclusive.", "$ref": "#/definitions/dateTime"}, "_start": {"description": "Extensions for start", "$ref": "#/definitions/Element"}, "end": {"description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.", "$ref": "#/definitions/dateTime"}, "_end": {"description": "Extensions for end", "$ref": "#/definitions/Element"}}, "additionalProperties": false}, "assigner": {"description": "Organization that issued/manages the identifier.", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "$ref": "#/definitions/string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}, "reference": {"description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.", "$ref": "#/definitions/string"}, "_reference": {"description": "Extensions for reference", "$ref": "#/definitions/Element"}, "type": {"description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).", "$ref": "#/definitions/uri"}, "_type": {"description": "Extensions for type", "$ref": "#/definitions/Element"}, "identifier": {"description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.", "$ref": "#/definitions/Identifier"}, "display": {"description": "Plain text narrative that identifies the resource in addition to the resource reference.", "$ref": "#/definitions/string"}, "_display": {"description": "Extensions for display", "$ref": "#/definitions/Element"}}, "additionalProperties": false}}, "additionalProperties": false}, "version": {"description": "The identifier that is used to identify this version of the concept map when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the concept map author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "_version": {"description": "Extensions for version", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "name": {"description": "A natural language name identifying the concept map. This name should be usable as an identifier for the module by machine processing applications such as code generation.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "_name": {"description": "Extensions for name", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "title": {"description": "A short, descriptive, user-friendly title for the concept map.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "_title": {"description": "Extensions for title", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "status": {"description": "The status of this concept map. Enables tracking the life-cycle of the content.", "pattern": "^[^\\s]+(\\s[^\\s]+)*$", "type": "string"}, "_status": {"description": "Extensions for status", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "experimental": {"description": "A Boolean value to indicate that this concept map is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.", "pattern": "^true|false$", "type": "boolean"}, "_experimental": {"description": "Extensions for experimental", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "date": {"description": "The date  (and optionally time) when the concept map was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the concept map changes.", "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", "type": "string"}, "_date": {"description": "Extensions for date", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "publisher": {"description": "The name of the organization or individual that published the concept map.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "_publisher": {"description": "Extensions for publisher", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "contact": {"description": "Contact details to assist a user in finding and communicating with the publisher.", "items": {"properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}, "name": {"description": "The name of an individual to contact.", "type": "string"}, "_name": {"description": "Extensions for name", "type": "string"}, "telecom": {"description": "The contact details for the individual (if a name was provided) or the organization.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "type": "array"}, "description": {"description": "A free text natural language description of the concept map from a consumer's perspective.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "_description": {"description": "Extensions for description", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "useContext": {"description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate concept map instances.", "items": {"properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}, "code": {"description": "A code that identifies the type of context being specified by this usage context.", "type": "string"}, "valueCodeableConcept": {"description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.", "type": "string"}, "valueQuantity": {"description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.", "type": "string"}, "valueRange": {"description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.", "type": "string"}, "valueReference": {"description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.", "type": "string"}}, "additionalProperties": false, "required": ["code"]}, "type": "array"}, "jurisdiction": {"description": "A legal or geographic region in which the concept map is intended to be used.", "items": {"properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}, "coding": {"description": "A reference to a code defined by a terminology system.", "items": {"type": "string"}, "type": "array"}, "text": {"description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.", "type": "string"}, "_text": {"description": "Extensions for text", "type": "string"}}, "additionalProperties": false}, "type": "array"}, "purpose": {"description": "Explanation of why this concept map is needed and why it has been designed as it has.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "_purpose": {"description": "Extensions for purpose", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "copyright": {"description": "A copyright statement relating to the concept map and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the concept map.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "_copyright": {"description": "Extensions for copyright", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "sourceUri": {"description": "Identifier for the source value set that contains the concepts that are being mapped and provides context for the mappings.", "pattern": "^\\S*$", "type": "string"}, "_sourceUri": {"description": "Extensions for sourceUri", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "sourceCanonical": {"description": "Identifier for the source value set that contains the concepts that are being mapped and provides context for the mappings.", "pattern": "^\\S*$", "type": "string"}, "_sourceCanonical": {"description": "Extensions for sourceCanonical", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "targetUri": {"description": "The target value set provides context for the mappings. Note that the mapping is made between concepts, not between value sets, but the value set provides important context about how the concept mapping choices are made.", "pattern": "^\\S*$", "type": "string"}, "_targetUri": {"description": "Extensions for targetUri", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "targetCanonical": {"description": "The target value set provides context for the mappings. Note that the mapping is made between concepts, not between value sets, but the value set provides important context about how the concept mapping choices are made.", "pattern": "^\\S*$", "type": "string"}, "_targetCanonical": {"description": "Extensions for targetCanonical", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}}, "additionalProperties": false}, "group": {"description": "A group of mappings that all have the same source and target system.", "items": {"properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "type": "string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"type": "string"}, "type": "array"}, "modifierExtension": {"description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", "items": {"type": "string"}, "type": "array"}, "source": {"description": "An absolute URI that identifies the source system where the concepts to be mapped are defined.", "type": "string"}, "_source": {"description": "Extensions for source", "type": "string"}, "sourceVersion": {"description": "The specific version of the code system, as determined by the code system authority.", "type": "string"}, "_sourceVersion": {"description": "Extensions for sourceVersion", "type": "string"}, "target": {"description": "An absolute URI that identifies the target system that the concepts will be mapped to.", "type": "string"}, "_target": {"description": "Extensions for target", "type": "string"}, "targetVersion": {"description": "The specific version of the code system, as determined by the code system authority.", "type": "string"}, "_targetVersion": {"description": "Extensions for targetVersion", "type": "string"}, "element": {"description": "Mappings for an individual concept in the source to one or more concepts in the target.", "items": {"type": "string"}, "type": "array"}, "unmapped": {"description": "What to do when there is no mapping for the source concept. \"Unmapped\" does not include codes that are unmatched, and the unmapped element is ignored in a code is specified to have equivalence = unmatched.", "type": "string"}}, "additionalProperties": false, "required": ["element"]}, "type": "array"}}, "additionalProperties": false, "required": ["resourceType"]}}