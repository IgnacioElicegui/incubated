openapi: 3.0.3
info:
  title: ACI Wait Times API
  description: Retrieves Wait Times content.
  contact:
    name: ACI
    url: 'https://aci.aero/'
  version: '1.6.0'
servers:
  - url: 'https://aci.aero'
tags:
  - name: Checkpoint Facilities
    description: ACI Checkpoint Facilities
  - name: Passenger Queues
    description: ACI Passenger Queues
  - name: Queue Measurements
    description: ACI Queue Measurements
paths:
  '/airports/{AirportIcaoCode}/checkpoints':
    get:
      tags:
        - Checkpoint Facilities
      description: This URI will return a list of CheckpointFacility objects.
      summary: >-
        Returns all of the security Checkpoint Facilities at the Airport Facility
        specified by ICAO Code
      operationId: getCheckpointFacilitiesByAirportId
      parameters:
        - name: AirportIcaoCode
          in: path
          description: Four-letter Airport ICAO Code
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: page
          required: false
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: size
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCheckpointFacilityList'
  '/airports/{AirportIcaoCode}/queues':
    get:
      tags:
        - Passenger Queues
      description: This URI will return a list of PassengerQueue objects.
      summary: >-
        Returns all of the PassengerQueue(s) at the AirportFacility specified by
        ICAO Code grouped by CheckpointFacility
      operationId: getPassengerQueuesByAirportId
      parameters:
        - name: AirportIcaoCode
          in: path
          description: Four-letter Airport ICAO Code
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: page
          required: false
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: size
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPassengerQueueList'
  '/airports/{AirportIcaoCode}/checkpoints/{CheckpointFacilityIdentifier}':
    get:
      tags:
        - Checkpoint Facilities
      description: This URI will return a single CheckpointFacility object.
      summary: >-
        Returns a specific CheckpointFacility identified by CheckpointFacility Identifier
      operationId: getCheckpointFacilityByAirportIdCheckpointId
      parameters:
        - name: AirportIcaoCode
          in: path
          description: Four-letter Airport ICAO Code
          required: true
          schema:
            type: string
        - name: CheckpointFacilityIdentifier
          in: path
          description: Unique identifier for the Checkpoint Facility. The identifier should be unique within an Airport.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckpointFacility'
  '/airports/{AirportIcaoCode}/checkpoints/{CheckpointFacilityIdentifier}/queues':
    get:
      tags:
        - Passenger Queues
      description: This URI will return a list of PassengerQueue objects.
      summary: >-
        Returns all of the PassengerQueue(s) at the specified CheckpointFacility
      operationId: getPassengerQueuesByAirportIdCheckpointId
      parameters:
        - name: AirportIcaoCode
          in: path
          description: Four-letter Airport ICAO Code
          required: true
          schema:
            type: string
        - name: CheckpointFacilityIdentifier
          in: path
          description: Unique identifier for the Checkpoint Facility. The identifier should be unique within an Airport.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: page
          required: false
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: size
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPassengerQueueList'
  '/airports/{AirportIcaoCode}/checkpoints/{CheckpointFacilityIdentifier}/queues/{QueueIdentifier}':
    get:
      tags:
        - Passenger Queues
      description: This URI will return a single PassengerQueue object.
      summary: >-
        Returns the specific PassengerQueue at the specified CheckpointFacility
      operationId: getPassengerQueueByAirportIdCheckpointIdQueueId
      parameters:
        - name: AirportIcaoCode
          in: path
          description: Four-letter Airport ICAO Code
          required: true
          schema:
            type: string
        - name: CheckpointFacilityIdentifier
          in: path
          description: Unique identifier for the Checkpoint Facility. The identifier should be unique within an Airport.
          required: true
          schema:
            type: string
        - name: QueueIdentifier
          in: path
          description: Unique identifier for the Passenger Queue. The identifier should be unique within an Airport.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PassengerQueue'
  '/airports/{AirportIcaoCode}/checkpoints/{CheckpointFacilityIdentifier}/measurements':
    get:
      tags:
        - Queue Measurements
      description: This URI will return a list of QueueMeasurement objects.
      summary: >-
        Returns all the wait time metrics for all PassengerQueue(s)
        at the specified CheckpointFacility
      operationId: getQueueMeasurementsByAirportIdCheckpointId
      parameters:
        - name: AirportIcaoCode
          in: path
          description: Four-letter Airport ICAO Code
          required: true
          schema:
            type: string
        - name: CheckpointFacilityIdentifier
          in: path
          description: Unique identifier for the Checkpoint Facility. The identifier should be unique within an Airport.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: page
          required: false
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: size
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQueueMeasurementList'
  '/airports/{AirportIcaoCode}/checkpoints/{CheckpointFacilityIdentifier}/queues/{QueueIdentifier}/measurements':
    get:
      tags:
        - Queue Measurements
      description: This URI will return a single QueueMeasurement object.
      summary: >-
        Returns the latest wait time metrics for the specific PassengerQueue
        at the specified security CheckpointFacility
      operationId: getQueueMeasurementByAirportIdCheckpointIdQueueId
      parameters:
        - name: AirportIcaoCode
          in: path
          description: Four-letter Airport ICAO Code
          required: true
          schema:
            type: string
        - name: CheckpointFacilityIdentifier
          in: path
          description: Unique identifier for the Checkpoint Facility. The identifier should be unique within an Airport.
          required: true
          schema:
            type: string
        - name: QueueIdentifier
          in: path
          description: Unique identifier for the Passenger Queue. The identifier should be unique within an Airport.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueMeasurement'
    put:
      tags:
        - Queue Measurements
      description: This URI will create or update a single QueueMeasurement object.
      summary: 'Sets all wait time metrics at a given queue for a specified time'
      operationId: putCurrentQueueMeasurementByAirportIdCheckpointIdQueueId
      parameters:
        - name: AirportIcaoCode
          in: path
          description: Four-letter Airport ICAO Code
          required: true
          schema:
            type: string
        - name: CheckpointFacilityIdentifier
          in: path
          description: Unique identifier for the Checkpoint Facility. The identifier should be unique within an Airport.
          required: true
          schema:
            type: string
        - name: QueueIdentifier
          in: path
          description: Unique identifier for the Passenger Queue. The identifier should be unique within an Airport.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
            examples:
              PUTAllMetrics:
                value:
                  Occupancy: 0
                  ProjectedWaitTime: 0
                  Throughput: 0
                  WaitTime: 0
                  EndTime: '2022-01-01T00:00:00Z'
                summary: Create/Update All Metrics
                description: Sets all wait time metrics at a given queue for a specified
                  time
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueMeasurement'
  '/airports/{AirportIcaoCode}/checkpoints/{CheckpointFacilityIdentifier}/queues/{QueueIdentifier}/measurements/history':
    get:
      tags:
      - Queue Measurements
      operationId: getQueueMeasurementHistoryByAirportIdCheckpointIdQueueId
      description: This URI will return a list of QueueMeasurement objects.
      summary: Returns the history of wait time metrics for the specific PassengerQueue
        at the specified security CheckpointFacility
      parameters:
      - in: path
        name: AirportIcaoCode
        required: true
        schema:
          type: string
      - in: path
        name: CheckpointFacilityIdentifier
        required: true
        schema:
          type: string
      - in: path
        name: QueueIdentifier
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: Number of results to return per page.
        required: false
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQueueMeasurementList'
components:
  schemas:
    AirportElevation:
      type: object
      description: 'The height of an Airport, above sea level.'
      properties:
        Name:
          type: string
          description: 'The name of an Airport elevation above sea level.'
        Value:
          type: number
          description: 'The value of an Airport elevation above sea level.'
        AirportElevationUnitOfMeasurement:
          $ref: '#/components/schemas/AirportElevationUnitOfMeasurement'
    AirportElevationUnitOfMeasurement:
      type: object
      description: 'The unit of measure of the height of an Airport above sea level (FT for foot or M for metre).'
      properties:
        Name:
          type: string
          description: 'The name of the unit of measure for an Airport elevation above sea level.'
    AirportFacility:
      type: object
      description: 'Information about an Airport as buildings or infrastructure used to provide services.'
      properties:
        IataCode:
          description: 'Three character IATA code for the Airport.'
          type: string
        IcaoCode:
          description: 'Four character ICAO code for the Airport.'
          type: string
        Name:
          description: 'Common name of the Airport.'
          type: string
    AirportLocation:
      type: object
      description: 'The geospatial or geopolitical location of an Airport.'
      properties:
        Latitude:
          description: 'Coordinate for latitude of the Airport.'
          type: number
        Longitude:
          description: 'Coordinate for longitude of the Airport.'
          type: number
        Name:
          description: 'Unique name for the Airport Location.'
          type: string
        Srid:
          description: 'A Spatial Reference System Identifier (SRID), to identify the spatial coordinate system definitions.'
          type: integer
    CheckpointAreaLocation:
      type: object
      description: 'The geospatial or geopolitical location of a Checkpoint.'
      properties:
        Latitude:
          description: 'Coordinate of the latitude of the checkpoint area location.'
          type: number
        Longitude:
          description: 'Coordinate of the longitude of the checkpoint area location.'
          type: number
        Name:
          description: 'Unique name for geospatial or geopolitical location of a Checkpoint Area Location.'
          type: string
        Srid:
          description: 'A Spatial Reference System Identifier (SRID), to identify the spatial coordinate system definitions'
          type: integer
        AirportElevation:
          $ref: '#/components/schemas/AirportElevation'
        ZoneAreaLocation:
          $ref: '#/components/schemas/ZoneAreaLocation'
    CheckpointFacility:
      type: object
      description: 'Information about a Checkpoint in an Airport used to provide services. A Checkpoint facility is any facility where customers and passengers turn up and need to be processed, serviced or screened before proceeding to the next stage of their journey. '
      properties:
        Description:
          description: 'Description of the Checkpoint Facility.'
          type: string
        Identifier:
          description: 'Unique identifier for the Checkpoint Facility. The identifier should be unique within an Airport.'
          type: string
        Name:
          description: 'Unique name for the Checkpoint Facility. The name should be unique within an Airport.'
          type: string
        CheckpointAreaLocation:
          $ref: '#/components/schemas/CheckpointAreaLocation'
        CheckpointFacilityOperatorParty:
          $ref: '#/components/schemas/CheckpointFacilityOperatorParty'
        CheckpointFacilityType:
          $ref: '#/components/schemas/CheckpointFacilityType'
        ConcourseFacility:
          $ref: '#/components/schemas/ConcourseFacility'
        OperationTimePeriod:
          $ref: '#/components/schemas/OperationTimePeriod'
    CheckpointFacilityOperatorParty:
      type: object
      description: 'Information that describes the Party responsible for the operation of a Checkpoint in an Airport.'
      properties:
        Name:
          description: 'Unique name of the Operator Party for the Checkpoint Facility.'
          type: string
    CheckpointFacilityType:
      type: object
      description: 'Information that describes the classification for a Checkpoint in an Airport. Values are: Security Screening, Customs.'
      properties:
        Code:
          description: 'Unique code for the Checkpoint Facility Type.'
          type: string
        Description:
          description: 'Description of the Checkpoint Facility Type.'
          type: string
    ConcourseFacility:
      type: object
      description: 'Information about an Airport Concourse as buildings or infrastructure used to provide services.'
      properties:
        Identifier:
          description: 'Unique identifier for the Concourse Facility.'
          type: string
        Name:
          description: 'Unique name for the Concourse Facility.'
          type: string
        TerminalFacility:
          $ref: '#/components/schemas/TerminalFacility'
    MeasurementDevice:
      type: object
      description: 'Information about the device (equipment) used to take measurements (observations).'
      properties:
        Name:
          description: 'Unique name for the Measurement Device.'
          type: string
        MeasurementDeviceLocation:
          $ref: '#/components/schemas/MeasurementDeviceLocation'
    MeasurementDeviceLocation:
      type: object
      description: 'The geospatial or geopolitical location of a Measurement Device.'
      properties:
        Name:
          description: 'Unique name for the location of the Measurement Device.'
          type: string
    MeasurementTimePeriod:
      type: object
      description: 'The time period over which a Measurement is taken.'
      properties:
        EndTime:
          type: string
          description: 'The date and time at the end of the time period over which a Measurement is taken. Date time should be UTC, compliant with ISO 8601 format (e.g. 2023-04-20T11:54:59Z)'
    OperationTimePeriod:
      type: object
      description: 'The time period over which the Checkpoint is operating.'
      properties:
        ClosingTime:
          description: 'The date and time from when the Checkpoint Facility is closed. Date time should be UTC, compliant with ISO 8601 format (e.g. 2023-04-20T11:54:59Z)'
          type: string
        OpeningTime:
          description: 'The date and time from when the Checkpoint Facility is open. Date time should be UTC, compliant with ISO 8601 format (e.g. 2023-04-20T11:54:59Z)'
          type: string
    PaginatedCheckpointFacilityList:
      type: object
      properties:
        Count:
          type: integer
          example: 123
        Next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/checkpoints/?page=4
        Previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/checkpoints/?page=2
        Results:
          type: array
          items:
            $ref: '#/components/schemas/CheckpointFacility'
    PaginatedPassengerQueueList:
      type: object
      properties:
        Count:
          type: integer
          example: 123
        Next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/queues/?page=4
        Previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/queues/?page=2
        Results:
          type: array
          items:
            $ref: '#/components/schemas/PassengerQueue'
    PaginatedQueueMeasurementList:
      type: object
      properties:
        Count:
          type: integer
          example: 123
        Next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/measurements/?page=4
        Previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/measurements/?page=2
        Results:
          type: array
          items:
            $ref: '#/components/schemas/QueueMeasurement'
    PassengerProcess:
      type: object
      description: 'Information about the Passenger Party Process.'
      properties:
        Name:
          description: 'Unique name for the Passenger Process.'
          type: string
        PassengerProcessType:
          $ref: '#/components/schemas/PassengerProcessType'
    PassengerProcessType:
      type: object
      description: 'Information about the type of Passenger Party Process.'
      properties:
        Code:
          type: string
          description: 'Unique code for the type of Passenger Party Process.'
        Description:
          type: string
          description: 'Description of the type of Passenger Party Process.'
    PassengerQueue:
      type: object
      description: 'Information about the Passenger Party Queue. A line of people waiting to pass through the security checkpoint process.'
      properties:
        Identifier:
          type: string
          description: 'Unique identifier for the Passenger Queue. The identifier should be unique within an Airport.'
        Name:
          type: string
          description: 'Name of the Passenger Queue. The name should be unique within an Airport.'
        CheckpointFacility:
          $ref: '#/components/schemas/CheckpointFacility'
        PassengerProcess:
          $ref: '#/components/schemas/PassengerProcess'
        QueueLocation:
          $ref: '#/components/schemas/QueueLocation'
        QueueStatus:
          $ref: '#/components/schemas/QueueStatus'
        QueueType:
          $ref: '#/components/schemas/QueueType'
    QueueLocation:
      type: object
      description: 'The geospatial or geopolitical location of a Passenger Queue.'
      properties:
        Name:
          type: string
          description: 'Unique name for the Queue Location.'
    QueueMeasurement:
      type: object
      description: 'Information about the measurements (observations) of particular Measures of a Passenger Queue.'
      properties:
        Occupancy:
          description: 'The count of people in the queue.  The unit of measure is number of people. This metric is updated every five minutes.'
          type: number
        ProjectedWaitTime:
          description: 'The estimated time that a person entering the queue can expect to wait. The unit of measure is seconds. Estimates are required to be updated every five minutes.'
          type: number
        Throughput:
          description: 'The average number of passengers processed over the past hour. The unit of measure is passengers per hour. This metric is updated every five minutes.'
          type: number
        WaitTime:
          description: 'The duration that a person exiting the queue has experienced. The unit of measure is seconds. The amount represents the average number of seconds experienced by people exiting the queue in the last five minutes. The amounts are required to be updated every five minutes.'
          type: number
        MeasurementDevice:
          $ref: '#/components/schemas/MeasurementDevice'
        MeasurementTimePeriod:
          $ref: '#/components/schemas/MeasurementTimePeriod'
        PassengerQueue:
          $ref: '#/components/schemas/PassengerQueue'
    QueueStatus:
      type: object
      description: 'Information about the status of a Passenger Queue. Values can be: Open, Closed.'
      properties:
        Name:
          type: string
          description: 'Unique name for the status of the Passenger Queue.'
    QueueType:
      type: object
      description: 'Information about the type of a Passenger Queue. Values can be: Pre-Check, Private, Economy, Priority, KnownCrewMember.'
      properties:
        Code:
          type: string
          description: 'Unique code for the type of Passenger Queue.'
        Description:
          type: string
          description: 'Description of the type of Passenger Queue.'
    TerminalAreaLocation:
      type: object
      description: 'The geospatial or geopolitical location of an Airport Terminal building.'
      properties:
        Name:
          type: string
          description: 'Unique name for the Terminal Area Location.'
        AirportLocation:
          $ref: '#/components/schemas/AirportLocation'
    TerminalFacility:
      type: object
      description: 'Information about an Airport Terminal as buildings or infrastructure used to provide services.'
      properties:
        Identifier:
          type: string
          description: 'Unique identifier for the Terminal Facility.'
        Name:
          type: string
          description: 'Unique name for the Terminal Facility.'
        AirportFacility:
          $ref: '#/components/schemas/AirportFacility'
    ZoneAreaLocation:
      type: object
      description: 'The geospatial or geopolitical location of a Queuing Zone in a Terminal.'
      properties:
        Name:
          type: string
          description: 'Unique name for the Zone Area Location.'
        TerminalAreaLocation:
          $ref: '#/components/schemas/TerminalAreaLocation'