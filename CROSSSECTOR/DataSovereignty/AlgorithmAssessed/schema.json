{
  "$schema": "http://json-schema.org/schema#",
  "$schemaVersion": "0.0.1",
  "$id": "https://smart-data-models.github.io/datamodel.MachineLearning/AssessedAlgorithm/schema.json,",
  "title": "Algorithm assess in terms of data sovereignty",
  "description": "This data model represents the assessment of an AI algorithm, initially offered as a service",
  "modelTags": "StandICT",
  "derivedFrom": "",
  "required": [
    "id",
    "type"
  ],
  "license": "https://smart-data-models.github.io/datamodel.MachineLearning/AssessedAlgorithm/LICENSE.md",
  "type": "object",
  "allOf": [
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"
    },
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Contact-Commons"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AlgorithmAssessed"
          ],
          "description": "Property. It has to be AlgorithmAssessed"
        },
        "request": {
          "type": "object",
          "description": "Property. identifier of the request for certification",
          "properties": {
            "requestId": {
              "type": "string",
              "description": "Property. Unique identifier of the request"
            },
            "requestDate": {
              "type": "string",
              "format": "date-time",
              "description": "Property. Date of the request according to ISO 8601 format"
            },
            "serviceId": {
              "type": "string",
              "description": "Property. Unique identifier of the service provided by the data space management system"
            },
            "serviceContact": {
              "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Contact-Commons"
            }
          }
        },
        "dateResponse": {
          "type": "string",
          "format": "date-time",
          "description": "Property. Date of the answer to the request according to ISO 8601 format"
        },
        "certification": {
          "certificationGranted": {
            "type": "boolean",
            "description": "Property. If the request has generated some kind of certification "
          },
          "typeOfCertification": {
            "description": "Property. What is the data storage the service is doing. noStorage means that the service is not storing the data at all. aggregatedStorage is that some data are stored but in an aggregated form so it avoids the individual access to the source registers. The aggregationThreshold attribute complement with the minimum size of an aggregation. individualStorage means that the service can store individual registries",
            "enum": [
              "noStorage",
              "aggregatedStorage",
              "individualStorage"
            ]
          },
          "validFrom": {
            "description": "Property. Defines the date and time, when the certification becomes valid",
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "description": "Property. Defines the date and time, when the certification expires",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "biasResults": {
        "type": "object",
        "description": "Property. ",
        "properties": {
          "race": {
            "type": "string",
            "description": "Property. Results of the algorithm test about race bias"
          },
          "ethnicity": {
            "type": "string",
            "description": "Property. Results of the algorithm test about ethnicity bias"
          },
          "gender": {
            "type": "string",
            "description": "Property. Results of the algorithm test about gender bias"
          },
          "nationality": {
            "type": "string",
            "description": "Property. Results of the algorithm test about nationality bias"
          },
          "income": {
            "type": "string",
            "description": "Property. Results of the algorithm test about income bias"
          },
          "sexualOrientation": {
            "type": "string",
            "description": "Property. Results of the algorithm test about sexual orientation bias"
          },
          "politicalBelief": {
            "type": "string",
            "description": "Property. Results of the algorithm test about political beliefs bias"
          },
          "religiousBelief": {
            "type": "string",
            "description": "Property. Results of the algorithm test about religious beliefs bias"
          }
        }
      },
      "termsOfUse": {
        "type": "string",
        "format": "uri",
        "description": "Property. Link to the terms of use of the algorithm, especially for the data sovereignty section"
      },
      "resultsIntegrity": {
        "type": "object",
        "description": "Property. Assessment of the preventions taken by the owner of the AI service to guarantee the integrity of the evidence of data",
        "properties": {
          "secureStorage": {
            "type": "string",
            "description": "Property. Results on the mechanisms for preventing unauthorized access to data"
          },
          "chainOfCustody": {
            "type": "string",
            "description": "Property. Results on the mechanisms to ensure that the evidence has not been altered"
          },
          "encryption": {
            "type": "string",
            "description": "Property. Results on the mechanisms to protect the evidence during communications and storage"
          },
          "digitalSignatures": {
            "type": "string",
            "description": "Property. Results on the mechanisms for digital signing of the evidence"
          }
        }
      },
      "trustee": {
        "type": "string",
        "format": "uri",
        "description": "Property. URI points to the id of the organization providing the trust. Next version could provide a VC trust framework for the identification of the certification"
      }
    }
  ]
}