{
  "$schema": "http://json-schema.org/schema#",
  "$schemaVersion": "0.0.1",
  "$id": "https://smart-data-models.github.io/datamodel.MachineLearning/DataSovereigntyMetadata/schema.json,",
  "title": "Algorithm data sovereignty request of certification",
  "description": "Algorithm data sovereignty request of certification. The data has to be provided by the owner of the service",
  "modelTags": "StandICT",
  "derivedFrom": "",
  "required": [
    "id",
    "type"
  ],
  "license": "https://smart-data-models.github.io/datamodel.MachineLearning/AssessedAlgorithm/LICENSE.md",
  "type": "object",
  "allOf": [
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"
    },
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Contact-Commons"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DataSovereigntyMetadata"
          ],
          "description": "Property. It has to be DataSovereigntyMetadata"
        },
        "request": {
          "type": "object",
          "description": "Property. identifier of the request for certification",
          "properties": {
            "requestId": {
              "type": "string",
              "description": "Property. Unique identifier of the request"
            },
            "requestDate": {
              "type": "string",
              "format": "date-time",
              "description": "Property. Date of the request according to ISO 8601 format"
            },
            "serviceId": {
              "type": "string",
              "description": "Property. Unique identifier of the service provided by the data space management system"
            },
            "serviceContact": {
              "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Contact-Commons"
            }
          }
        },
        "serviceCharacteristics": {
          "type": "string",
          "format": "uri",
          "description": "Relationship. Pointer to where the description of the service is available compliant with th service description specification of Gaia-X. https://gitlab.com/gaia-x/technical-committee/service-characteristics"
        },
        "execution": {
          "type": "string",
          "description": "Property. Whether the service is executed in the data space's resources or in their own resources",
          "enum": [
            "remote",
            "dataspace"
          ]
        },
        "executionUrl": {
          "type": "string",
          "format": "uri",
          "description": "Property. Pointer to where the service is executed (usually for remotely executed services)"
        },
        "allowedPersonalData": {
          "type": "boolean",
          "description": "Property. if the service is capable to deal with personal data affected by the GDPR regulation"
        },
        "storage": {
          "type": "string",
          "description": "Property. What is the service doing with the data storageWhat is the service doing with the data storage. noStorage means that the service is not storing the data at all. aggregatedStorage is that some data are stored but in an aggregated form so it avoids individual access to the source registers. The aggregationThreshold attribute complement with the minimum size of an aggregation. individualStorage means that the service can store individual registries",
          "enum": [
            "noStorage",
            "aggregatedStorage",
            "individualStorage"
          ]
        },
        "storageJurisdiction": {
          "type": "string",
          "description": "Property. The jurisdiction where the data are stored in the case they are. Registration coded in ISO 3166-1 alpha2, alpha-3 or numeric format."
        },
        "aggregationThreshold": {
          "type": "number",
          "minimum": 1,
          "description": "Property. Minimum size of aggregated data stored by the service."
        },
        "processingIntegrity": {
          "type": "string",
          "description": "Property. Description of the mechanisms for ensuring the integrity of the transmission chain of data for processing, obtaining results and delivering to the user"
        },
        "resultsTrainAlgorithm": {
          "type": "boolean",
          "description": "Property. it indicates if the processed information is incorporated to the AI algorithm for improving its performance, accuracy, etc."
        },
        "qualificationRequested": {
          "type": "string",
          "description": "Property. Global qualification of the algorithm requested for the certification. asIs means that the algorithm does not provide evidence of compliance with data sovereignty regulations or standards. documented means that the algorithm provides self-certification of some data sovereignty standards compliance. sandbox means that the algorithm has been tested in an independent sandbox to check data sovereignty ",
          "enum": [
            "No storage",
            "storage of aggregated data",
            "storage of individual data"
          ]
        },
        "socialImpact": {
          "type": "string",
          "description": "Property. if the algorithm has any kind of social impact assessment"
        },
        "checkBias": {
          "type": "object",
          "description": "Property. If the algorithm has been checked against these potential biases. Race, ethnicity, gender, nationality, income, sexual orientation, ability, and political or religious belief.",
          "properties": {
            "race": {
              "type": "boolean",
              "description": "Property. If the algorithm has been assessed in terms of race bias "
            },
            "ethnicity": {
              "type": "boolean",
              "description": "Property. If the algorithm has been assessed in terms of ethnicity bias "
            },
            "gender": {
              "type": "boolean",
              "description": "Property. If the algorithm has been assessed in terms of gender bias "
            },
            "nationality": {
              "type": "boolean",
              "description": "Property. If the algorithm has been assessed in terms of nationality bias "
            },
            "income": {
              "type": "boolean",
              "description": "Property. If the algorithm has been assessed in terms of income bias "
            },
            "sexualOrientation": {
              "type": "boolean",
              "description": "Property. If the algorithm has been assessed in terms of sexual orientation bias "
            },
            "politicalBelief": {
              "type": "boolean",
              "description": "Property. If the algorithm has been assessed in terms of political beliefs bias "
            },
            "religiousBelief": {
              "type": "boolean",
              "description": "Property. If the algorithm has been assessed in terms of religious beliefs bias "
            }
          }

        },
        "termsOfUse": {
          "type": "string",
          "format": "uri",
          "description": "Property. Link to the terms of use of the algorithm, especially for the data sovereignty section"
        },
        "integrity": {
          "type": "object",
          "description": "Property. Preventions took by the owner of the AI service to guarantee the integrity of the evidence of data",
          "properties": {
            "secureStorage": {
              "type": "string",
              "description": "Property. the mechanism for preventing unauthorized access to data"
            },
            "chainOfCustody": {
              "type": "string",
              "description": "Property. Mechanism to ensure that the evidence has not been altered"
            },
            "encryption": {
              "type": "string",
              "description": "Property. Mechanism to protect the evidence during communications and storage"
            },
            "digitalSignatures": {
              "type": "string",
              "description": "Property. Description of the mechanism for digital signing of the evidence"
            }
          }
        },
        "trustee": {
          "type": "string",
          "format": "uri",
          "description": "Property. URI points to the id of the organization providing the trust. Next version could provide a VC trust framework for the identification of the certification"
        },
        "opensource":  {
          "type": "boolean",
          "description": "Property. if the algorithm is open source and can be publicly be checked"
        },
        "sourceCode": {
          "type": "string",
          "format": "uri",
          "description": "Property. Link to the source code available to be examined by the certification experts and processes"
        }
      }
    }
  ]
}